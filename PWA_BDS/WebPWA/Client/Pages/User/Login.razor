@page "/user/login"
@using WebPWA.Shared
@using Client.ViewModel
@inject UserViewModel _userViewModel
@inject NavigationManager NavigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<h3>Login</h3>

<EditForm Model="@user" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label for="username">User Name</label>
        <InputText id="username" @bind-Value="user.LoginName" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">User Name</label>
        <InputText id="password" @bind-Value="user.Password" type="password" class="form-control" />
    </div>
    <button type="submit" class="btn btn-primary">Đăng nhập</button>
    @if (!isLoginSuccess)
    {
        <h4>Đăng nhập không thành công</h4>
    }
</EditForm>
<button class="btn btn-primary" @onclick="ClearLocalStorage">Clear</button>

@code {
    UserLogin user = new UserLogin();
    User currentUser = new User();
    string key = "userInfo";
    bool isLoginSuccess = true;
    public async Task HandleLogin()
    {
        _userViewModel.LoginName = user.LoginName;
        _userViewModel.LoginPassword = user.Password;
        User currentUser = await _userViewModel.LoginUser();
        if(currentUser != null)
        {
            SaveLocalStorage();
            //NavigationManager.NavigateTo("/");
        }
        else isLoginSuccess = false;
    }

    public async void SaveLocalStorage()
    {
        await localStorage.SetItemAsync(key, user);
    }
    public async void ClearLocalStorage()
    {
        await localStorage.ClearAsync();
    }
}
